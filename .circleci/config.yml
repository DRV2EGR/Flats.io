version: 2

orbs:
  maven: circleci/maven@0.0.12
  codecov: codecov/codecov@1.1.1
  coveralls: coveralls/coveralls@1.0.4

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
#      - deploy:
#          requires:
#            - build
#          filters:
#            branches:
#              only: master

jobs:
  build:

#    working_directory: ~/Flats_io

    docker:
      - image: circleci/openjdk:latest
      - image: circleci/postgres:latest
#        environment:
#          POSTGRES_USER: hackaton_app
#          POSTGRES_DB: hackaton_demo
#          POSTGRES_PASSWORD: 1234

    steps:
#      - run:
#          name: Setup PSQL Databases
#          command: |
#            sudo rm -rf /var/lib/apt/lists/* && sudo apt update
#            sudo apt-get update
#            sudo apt install -y postgresql-client
#            createdb -h localhost hackaton_test -U hackaton_app
      - checkout

      - run: mvn package

      - store_test_results:
          path: target/surefire-reports

      - store_artifacts:
          path: target/Flats_io.jar

      - run: bash <(curl -s https://codecov.io/bash)

      steps:
        - checkout
        - run: npm install
        # - run: npm test
        - restore_cache:
            key: dependency-cache-{{ checksum "package.json" }}
        - run:
            name: install-npm-wee
            command: npm install
        - save_cache:
            key: dependency-cache-{{ checksum "package.json" }}
            paths:
              - ./node_modules
        - run: # run tests
            name: test
            command: npm run test
        - run: # run code coverage report
            name: code-coverage
            command: npm run coverage
        - coveralls/upload
        - store_artifacts: # special step to save test results as as artifact
            # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
            path: test-results
            prefix: tests
        - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
            path: coverage
            prefix: coverage
        - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
            path: test-results
        - run: # test what branch we're on.
            name: "What branch am I on?"
            command: echo ${CIRCLE_BRANCH}
  notify:
    webhooks:
      - url: https://coveralls.io/webhook?repo_token=${process.env.COVERALLS_REPO_TOKEN}
#  deploy:
#    docker:
#      - image: circleci/openjdk:latest
#    steps:
#      - checkout
#      - run:
#          name: Deploy Master to Heroku
#          command: |
#            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
